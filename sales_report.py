from b24 import B24
import requests
from datetime import datetime, timedelta
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

b24 = B24(domain="ua.zvilnymo.com.ua", user_id=596, token="wo0wme6ciueuv8cf")

category_id = 0

yesterday = (datetime.today() - timedelta(days=1)).strftime('%Y-%m-%d')

deal_filter = {
    "CATEGORY_ID": category_id, 
    ">=CLOSEDATE": f'{yesterday}T00:00:01',  
    "<=CLOSEDATE": f'{yesterday}T23:59:59',
    'STAGE_ID': 'WON'
}

select_fields = ["ID", "OPPORTUNITY", 'ASSIGNED_BY_ID', 'CLOSEDATE', 'UTM_SOURCE', 'UF_CRM_1695636781']  

deals = b24.get_list("crm.deal.list", b24_filter=deal_filter, select=select_fields)
deals_list = pd.DataFrame(deals)

#–í—ã–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º –∏–∑ –°RM
b24 = B24('ua.zvilnymo.com.ua', 596, 'vt8sovzu4o2y28j7')
items_users = b24.get_list('user.get', select=['ID','NAME', 'LAST_NAME', 'SECOND_NAME'])
users_df = pd.DataFrame(items_users)[['ID', 'NAME', 'LAST_NAME', 'SECOND_NAME']]
users_df['FULL_NAME'] = users_df[['NAME', 'LAST_NAME', 'SECOND_NAME']].fillna('').agg(' '.join, axis=1).str.strip()
users_df = users_df[['ID', 'FULL_NAME']]

#–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤—É–µ–º –¥–∞–Ω–Ω—ã–µ 
full_data = deals_list.merge(users_df, how='inner', left_on='ASSIGNED_BY_ID', right_on='ID')
full_data["OPPORTUNITY"] = full_data["OPPORTUNITY"].astype(float)
full_data = full_data.rename(columns={'ID_x':'deal_id','OPPORTUNITY':'contract_amount','FULL_NAME':'manager','UF_CRM_1695636781':'type_contract'})
full_data.type_contract = full_data.type_contract.replace({'1206':'–ë–∞–Ω–∫—Ä—É—Ç—Å–≤–æ','1207':'–î–æ—Å—É–¥–æ–≤–µ'})

#–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –ø–æ —Ç–∏–ø—É –∫–æ–Ω—Ç–∞–∫—Ç–∞
type_contacts_data = full_data.groupby('type_contract') \
        .agg({'contract_amount':'sum','deal_id':'count'}) \
        .reset_index() \
        .rename(columns={'deal_id':'number_of_contracts'})


#–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –ø–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º
data_sales_by_managers = full_data.groupby('manager') \
        .aggregate({'contract_amount':'sum','CLOSEDATE':'count'}) \
        .sort_values('contract_amount', ascending=False) \
        .reset_index() \
        .rename(columns={'CLOSEDATE':'number_of_contracts'})

#–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º
data_sales_by_source = full_data.groupby('UTM_SOURCE') \
        .aggregate({'contract_amount':'sum','CLOSEDATE':'count'}) \
        .sort_values('contract_amount', ascending=False) \
        .reset_index() \
        .rename(columns={'CLOSEDATE':'number_of_contracts'})




# –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥–∞–∂ –∑–∞ —Å–µ–≥–æ–¥–Ω—è
total_sales_yesterday = full_data.contract_amount.sum()

# –°–æ–∑–¥–∞–µ–º —Ñ–∏–≥—É—Ä—É —Å 2 —Å—Ç—Ä–æ–∫–∞–º–∏ –∏ 2 —Å—Ç–æ–ª–±—Ü–∞–º–∏
fig, axes = plt.subplots(2, 2, figsize=(14, 12))

# 1-–π –≥—Ä–∞—Ñ–∏–∫: –ü—Ä–æ–¥–∞–∂–∏ –ø–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º (—Å—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤)
data_sales_by_managers = data_sales_by_managers.sort_values(by="contract_amount", ascending=False)  # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —É–±—ã–≤–∞–Ω–∏—é
ax1 = axes[0, 0]

# –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π –±–∞—Ä–ø–ª–æ—Ç (–°—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤)
ax1.bar(data_sales_by_managers['manager'], data_sales_by_managers['contract_amount'], 
        color='skyblue', edgecolor='black', label="–°—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤")

# –ü–æ–¥–ø–∏—Å–∏ –¥–ª—è –±–∞—Ä–æ–≤
for i, amount in enumerate(data_sales_by_managers['contract_amount']):
    ax1.text(i, amount, f'{amount:,.0f}', va='bottom', ha='center', fontsize=12, fontweight='bold', color='black')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Å–µ–π –∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
ax1.set_title('–ü—Ä–æ–¥–∞–∂–∏ –ø–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º (—Å—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤)', fontsize=14, fontweight='bold')
ax1.set_xlabel('–ú–µ–Ω–µ–¥–∂–µ—Ä', fontsize=12, fontweight='bold')
ax1.set_ylabel('–°—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤', fontsize=12, fontweight='bold')

# –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –ø–æ–¥–ø–∏—Å–∏
ax1.set_xticklabels(data_sales_by_managers['manager'], rotation=45, ha='right')

# –£–±–∏—Ä–∞–µ–º —Ä–∞–º–∫—É
for spine in ax1.spines.values():
    spine.set_visible(False)

# 2-–π –≥—Ä–∞—Ñ–∏–∫: –ü—Ä–æ–¥–∞–∂–∏ –ø–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤)
ax2 = axes[0, 1]

# –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π –±–∞—Ä–ø–ª–æ—Ç (–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤)
ax2.bar(data_sales_by_managers['manager'], data_sales_by_managers['number_of_contracts'], 
        color='lightblue', edgecolor='black', label="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤")

# –ü–æ–¥–ø–∏—Å–∏ –¥–ª—è –±–∞—Ä–æ–≤
for i, contracts in enumerate(data_sales_by_managers['number_of_contracts']):
    ax2.text(i, contracts, f'{contracts}', va='bottom', ha='center', fontsize=12, fontweight='bold', color='black')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Å–µ–π –∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
ax2.set_title('–ü—Ä–æ–¥–∞–∂–∏ –ø–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤)', fontsize=14, fontweight='bold')
ax2.set_xlabel('–ú–µ–Ω–µ–¥–∂–µ—Ä', fontsize=12, fontweight='bold')
ax2.set_ylabel('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤', fontsize=12, fontweight='bold')

# –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –ø–æ–¥–ø–∏—Å–∏
ax2.set_xticklabels(data_sales_by_managers['manager'], rotation=45, ha='right')

# –£–±–∏—Ä–∞–µ–º —Ä–∞–º–∫—É
for spine in ax2.spines.values():
    spine.set_visible(False)

# 3-–π –≥—Ä–∞—Ñ–∏–∫: –ü—Ä–æ–¥–∞–∂–∏ –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º (—Å—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤)
data_sales_by_source = data_sales_by_source.sort_values(by="contract_amount", ascending=False)  # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —É–±—ã–≤–∞–Ω–∏—é
ax3 = axes[1, 0]

# –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π –±–∞—Ä–ø–ª–æ—Ç (–°—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤)
ax3.bar(data_sales_by_source['UTM_SOURCE'], data_sales_by_source['contract_amount'], 
        color='skyblue', edgecolor='black', label="–°—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤")

# –ü–æ–¥–ø–∏—Å–∏ –¥–ª—è –±–∞—Ä–æ–≤
for i, amount in enumerate(data_sales_by_source['contract_amount']):
    ax3.text(i, amount, f'{amount:,.0f}', va='bottom', ha='center', fontsize=12, fontweight='bold', color='black')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Å–µ–π –∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
ax3.set_title('–ü—Ä–æ–¥–∞–∂–∏ –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º (—Å—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤)', fontsize=14, fontweight='bold')
ax3.set_xlabel('–ò—Å—Ç–æ—á–Ω–∏–∫', fontsize=12, fontweight='bold')
ax3.set_ylabel('–°—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤', fontsize=12, fontweight='bold')

# –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –ø–æ–¥–ø–∏—Å–∏
ax3.set_xticklabels(data_sales_by_source['UTM_SOURCE'], rotation=45, ha='right')

# –£–±–∏—Ä–∞–µ–º —Ä–∞–º–∫—É
for spine in ax3.spines.values():
    spine.set_visible(False)

# 4-–π –≥—Ä–∞—Ñ–∏–∫: –ü—Ä–æ–¥–∞–∂–∏ –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤)
ax4 = axes[1, 1]

# –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π –±–∞—Ä–ø–ª–æ—Ç (–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤)
ax4.bar(data_sales_by_source['UTM_SOURCE'], data_sales_by_source['number_of_contracts'], 
        color='lightblue', edgecolor='black', label="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤")

# –ü–æ–¥–ø–∏—Å–∏ –¥–ª—è –±–∞—Ä–æ–≤
for i, contracts in enumerate(data_sales_by_source['number_of_contracts']):
    ax4.text(i, contracts, f'{contracts}', va='bottom', ha='center', fontsize=12, fontweight='bold', color='black')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Å–µ–π –∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
ax4.set_title('–ü—Ä–æ–¥–∞–∂–∏ –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤)', fontsize=14, fontweight='bold')
ax4.set_xlabel('–ò—Å—Ç–æ—á–Ω–∏–∫', fontsize=12, fontweight='bold')
ax4.set_ylabel('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤', fontsize=12, fontweight='bold')

# –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –ø–æ–¥–ø–∏—Å–∏
ax4.set_xticklabels(data_sales_by_source['UTM_SOURCE'], rotation=45, ha='right')

# –£–±–∏—Ä–∞–µ–º —Ä–∞–º–∫—É
for spine in ax4.spines.values():
    spine.set_visible(False)

# –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–¥–ø–∏—Å—å —Å –æ–±—â–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø—Ä–æ–¥–∞–∂
fig.text(0.5, 1.05, f'–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥–∞–∂ –∑–∞ –≤—á–µ—Ä–∞—à–Ω–∏–π –¥–µ–Ω—å: {total_sales_yesterday:,.0f} UAH', 
         ha='center', fontsize=20, fontweight='bold', color='darkblue')

# –ö–æ–º–ø–æ–Ω–æ–≤–∫–∞ –≥—Ä–∞—Ñ–∏–∫–æ–≤
plt.tight_layout()

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
fig.savefig('sales_report.png', bbox_inches='tight', dpi=300)



#–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞

TOKEN = "8024442492:AAEOg60JnXOC4OpIHqwAWeLwptQMrHwHQ3o"

chat_ids = [727013047, 718885452, 6775209607, 1139941966, 332270956]

def send_message(text, chat_ids):
    url = f"https://api.telegram.org/bot{TOKEN}/sendMessage"
    for chat_id in chat_ids:
        requests.post(url, data={"chat_id": chat_id, "text": text, "parse_mode": "HTML"})

def send_graph_to_telegram(image_path, chat_ids):
    url = f"https://api.telegram.org/bot{TOKEN}/sendPhoto"
    for chat_id in chat_ids:
        with open(image_path, "rb") as photo:  # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤–Ω—É—Ç—Ä–∏ —Ü–∏–∫–ª–∞
            requests.post(url, data={"chat_id": chat_id}, files={"photo": photo})

            
# –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥–∞–∂ –∑–∞ –≤—á–µ—Ä–∞—à–Ω–∏–π –¥–µ–Ω—å
total_sales_yesterday = full_data.contract_amount.sum()

# –°–æ–∑–¥–∞–µ–º —É—Å–ª–æ–≤–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –±—ã–ª–∏ –ª–∏ –ø—Ä–æ–¥–∞–∂–∏
if full_data.shape[0] == 0:
    # –ï—Å–ª–∏ –ø—Ä–æ–¥–∞–∂ –Ω–µ –±—ã–ª–æ, —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–ø—Å–µ —Å –∫—Ä–∞—Å–Ω—ã–º–∏ —Å–º–∞–π–ª–∏–∫–∞–º–∏
    message_text = (
        "üî¥ –°–ï–ì–û–î–ù–Ø –ë–ï–ó –ü–†–û–î–ê–ñ, –ü–†–ò–ë–´–õ–¨ –°–û–°–¢–ê–í–ò–õ–ê 0 –ì–†–ù!!!! üî¥"
    )
else:
    # –ï—Å–ª–∏ –ø—Ä–æ–¥–∞–∂–∏ –µ—Å—Ç—å, —Å–æ—Å—Ç–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–µ—Ç–∞–ª—è–º–∏
    message_text = (
        f"üìä –≠—Ç–æ –æ—Ç—á–µ—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º –∑–∞ <b>{yesterday}</b>.\n"
        f"üí∞ –í—á–µ—Ä–∞ –±—ã–ª–æ —Å–æ–≤–µ—Ä—à–µ–Ω–æ <b>{full_data.shape[0]}</b> –ø—Ä–æ–¥–∞–∂.\n"
        f"üí∏ –ù–∞ —Å—É–º–º—É <b>{full_data['contract_amount'].sum()}</b>\n\n"
        + "\n".join(
            f"üîπ {row['type_contract']}: {row['contract_amount']} "
            f"(–ö–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤: {row['number_of_contracts']})"
            for _, row in type_contacts_data.iterrows()
        )
    )

# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥—Ä–∞—Ñ–∏–∫ –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
send_graph_to_telegram("sales_report.png", chat_ids)
send_message(message_text, chat_ids)
